name: Blocks Playwright Tests

on:
    pull_request:
        paths:
            - '.github/workflows/blocks-playwright.yml' # This file
            - 'plugins/woocommerce-blocks/**'
            - 'plugins/woocommerce/src/Blocks/**'
            - 'plugins/woocommerce/templates/**'
            - 'plugins/woocommerce/patterns/**'
    # Allow manually triggering the workflow.
    workflow_dispatch:

env:
    FORCE_COLOR: 1

jobs:
    blocks-playwright-tests:
        name: Playwright E2E tests
        timeout-minutes: 60
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: plugins/woocommerce-blocks

        steps:
            - uses: actions/checkout@v4

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install: '@woocommerce/plugin-woocommerce...'
                  build: '@woocommerce/plugin-woocommerce'

            - name: Install Playwright dependencies
              run: pnpm exec playwright install chromium --with-deps

            - name: Setup testing environment and start the server
              run: pnpm env:start

            - name: Run Playwright tests
              run: pnpm test:e2e

            - name: Archive debug artifacts (screenshots, traces)
              uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: failures-artifacts-shard
                  path: plugins/woocommerce-blocks/tests/e2e/artifacts/test-results
                  if-no-files-found: ignore

            - name: Archive flaky test reports
              uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: flaky-tests-report-1
                  path: plugins/woocommerce-blocks/flaky-tests
                  if-no-files-found: ignore
                  overwrite: true

    merge-artifacts:
        # Merges all artifacts from all shards into a single zip and
        # deletes the parts. In case of a rerun, artifacts from the
        # previous run will be retained by merging them with the new ones.
        name: Merge Artifacts
        if: ${{ !cancelled() }}
        needs: [blocks-playwright-tests]
        runs-on: ubuntu-latest
        outputs:
            has-flaky-test-report: 'true'
        steps:
            - name: Merge Artifacts
              uses: actions/upload-artifact/merge@v4
              # Don't fail the job if there aren't any artifacts to merge.
              continue-on-error: true
              with:
                  name: failures-artifacts
                  pattern: failures-artifacts*
                  delete-merged: true

            - name: Merge flaky tests reports
              id: merge-flaky-tests-reports
              uses: actions/upload-artifact/merge@v4
              continue-on-error: true
              with:
                  name: flaky-tests-report
                  pattern: flaky-tests-report*
                  delete-merged: true

    debug-output:
        name: Debug value of has-flaky-test-report
        needs: [merge-artifacts]
        runs-on: ubuntu-latest
        if: ${{ !cancelled() }}
        steps:
            - name: Output
              run: |
                  echo "Has flaky test report: ${{ needs.merge-artifacts.outputs.has-flaky-test-report }}"

    create-github-issues-for-flaky-tests:
        name: Create GitHub issues for flaky tests
        needs: [merge-artifacts]
        if: ${{ !cancelled() }}
        runs-on: ubuntu-latest
        steps:
            # We are using @wordpress/report-flaky-tests package
            # to create GitHub issues for flaky tests from Gutenberg repo.
            - uses: actions/checkout@v4
              with:
                  repository: WordPress/gutenberg
                  ref: trunk

            - name: Use desired version of NodeJS
              uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
              with:
                  node-version-file: '.nvmrc'
                  cache: npm

            - name: Npm install and build
              # TODO: We don't have to build the entire project, just the action itself.
              run: |
                  npm ci
                  npm run build:packages

            - uses: actions/download-artifact@v4.1.7
              # Don't fail the job if there isn't any flaky tests report.
              continue-on-error: true
              with:
                  name: flaky-tests-report
                  path: flaky-tests

            - name: Report flaky tests
              uses: ./packages/report-flaky-tests
              with:
                  repo-token: '${{ secrets.GITHUB_TOKEN }}'
                  label: 'metric: flaky e2e test'
                  artifact-path: flaky-tests
